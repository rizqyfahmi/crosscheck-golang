// Code generated by MockGen. DO NOT EDIT.
// Source: app/utils/jwt/jwt.go

// Package mock is a generated GoMock package.
package mock

import (
	reflect "reflect"

	jwt "github.com/golang-jwt/jwt/v4"
	gomock "github.com/golang/mock/gomock"
)

// MockJwtUtil is a mock of JwtUtil interface.
type MockJwtUtil struct {
	ctrl     *gomock.Controller
	recorder *MockJwtUtilMockRecorder
}

// MockJwtUtilMockRecorder is the mock recorder for MockJwtUtil.
type MockJwtUtilMockRecorder struct {
	mock *MockJwtUtil
}

// NewMockJwtUtil creates a new mock instance.
func NewMockJwtUtil(ctrl *gomock.Controller) *MockJwtUtil {
	mock := &MockJwtUtil{ctrl: ctrl}
	mock.recorder = &MockJwtUtilMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockJwtUtil) EXPECT() *MockJwtUtilMockRecorder {
	return m.recorder
}

// GenerateToken mocks base method.
func (m *MockJwtUtil) GenerateToken(userID string) (*string, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GenerateToken", userID)
	ret0, _ := ret[0].(*string)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GenerateToken indicates an expected call of GenerateToken.
func (mr *MockJwtUtilMockRecorder) GenerateToken(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GenerateToken", reflect.TypeOf((*MockJwtUtil)(nil).GenerateToken), userID)
}

// ValidateToken mocks base method.
func (m *MockJwtUtil) ValidateToken(token string) (*jwt.Token, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ValidateToken", token)
	ret0, _ := ret[0].(*jwt.Token)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ValidateToken indicates an expected call of ValidateToken.
func (mr *MockJwtUtilMockRecorder) ValidateToken(token interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ValidateToken", reflect.TypeOf((*MockJwtUtil)(nil).ValidateToken), token)
}
